// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
  provider = "postgres"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model Package {
  barcode              String         @id
  toDeliveryPointValue Int
  desi                 Int
  // To return `Date`s intact through the API we use transformers
  // https://trpc.io/docs/data-transformers
  // This is unique so it can be used for cursor-based pagination
  createdAt            DateTime       @default(now())
  updatedAt            DateTime       @default(now()) @updatedAt
  status               ShipmentStatus @default(CREATED)
  toDeliveryPoint      DeliveryPoint  @relation(fields: [toDeliveryPointValue], references: [value])
  sack                 Sack?          @relation(fields: [sackBarcode], references: [barcode])
  sackBarcode          String?

  @@map(name: "packages")
}

enum ShipmentStatus {
  CREATED          @map("1")
  LOADED_INTO_SACK @map("2")
  LOADED           @map("3")
  UNLOADED         @map("4")
}

model DeliveryPoint {
  value     Int               @id @default(autoincrement())
  name      DeliveryPointType
  createdAt DateTime          @default(now())
  updatedAt DateTime          @default(now()) @updatedAt
  packages  Package[]
  sacks     Sack[]

  @@map(name: "delivery_points")
}

enum DeliveryPointType {
  BRANCH              @map("Branch")
  DISTRIBUTION_CENTRE @map("Distribution Centre")
  TRANSFER_CENTRE     @map("Transfer Centre")
}

model Sack {
  barcode              String         @id
  toDeliveryPointValue Int
  createdAt            DateTime       @default(now())
  updatedAt            DateTime       @default(now()) @updatedAt
  status               ShipmentStatus @default(CREATED)
  packages             Package[]
  toDeliveryPoint      DeliveryPoint  @relation(fields: [toDeliveryPointValue], references: [value])

  @@map(name: "sacks")
}

model FailedShipment {
  id                   Int                  @id @default(autoincrement())
  barcode              String
  toDeliveryPointValue Int
  createdAt            DateTime             @default(now())
  updatedAt            DateTime             @default(now()) @updatedAt
  reason               FailedShipmentReason

  @@map(name: "failed_shipments")
}

enum FailedShipmentReason {
  INVALID_BARCODE
  WRONG_DELIVERY_POINT
  INVALID_DELIVERY_POINT
}
